## GET todo entry
GET http://{{host}}:{{port}}/todo/1/
Accept: application/json

> {%
    client.test("Get todo", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}
###

## GET todo entry
GET http://{{host}}:{{port}}/todo/42/
Accept: application/json

> {%
    client.test("Todo was not found", function() {
        client.assert(response.status === 404, "Response status is not 404");
    });
%}
###



## POST Create new todo
POST http://{{host}}:{{port}}/todo/
Content-Type: application/json

{
  "summary": "Lorem Ipsum",
  "detail": null
}

> {%
    client.test("Create new todo", function() {
        client.assert(response.status === 201, "Response status is not 201");
        client.assert(response.body.hasOwnProperty("id"), "Cannot find 'id' option in response");
    });
%}
###


## POST Validation test
POST http://{{host}}:{{port}}/todo/
Content-Type: application/json

{
  "summary": "Lo",
  "detail": null,
  "tags": ["important"]
}

> {%
    client.test("Validation error", function() {
        client.assert(response.status === 422, "Response status is not 422");
        client.assert(response.body.hasOwnProperty("type"), "Cannot find 'type' option in response");
        client.assert(response.body.hasOwnProperty("message"), "Cannot find 'message' option in response");
        client.assert(response.body.hasOwnProperty("validation_schema"), "Cannot find 'validation_schema' option in response");
        client.assert(response.body.hasOwnProperty("path"), "Cannot find 'path' option in response");
    });
%}
###

## PATCH Update existing todo
PATCH http://{{host}}:{{port}}/todo/1/
Content-Type: application/json-patch+json

[
    {"op": "add", "path": "/tags/-", "value": "important"}
]

> {%
    client.test("Update todo", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.hasOwnProperty("id"), "Cannot find 'id' option in response");
    });
%}
###

## PATCH Update existing todo
PATCH http://{{host}}:{{port}}/todo/1/
Content-Type: application/json-patch+json

[
    {"op": "remove", "path": "/tags"}
]

> {%
    client.test("Update todo", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.hasOwnProperty("id"), "Cannot find 'id' option in response");
    });
%}
###

## PATCH Update existing todo
PATCH http://{{host}}:{{port}}/todo/42/
Content-Type: application/json-patch+json

[
    {"op": "add", "path": "/tags/-", "value": "important"}
]

> {%
    client.test("Todo was not found", function() {
        client.assert(response.status === 404, "Response status is not 404");
    });
%}
###
